name: Deploy EverShop Shop

on:
  repository_dispatch:
    types: [deploy-shop]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Extract payload
        id: payload
        run: |
          echo "app_name=${{ github.event.client_payload.app_name }}" >> $GITHUB_OUTPUT
          echo "shop_name=${{ github.event.client_payload.shop_name }}" >> $GITHUB_OUTPUT
          echo "admin_email=${{ github.event.client_payload.admin_email }}" >> $GITHUB_OUTPUT
          echo "deployment_id=${{ github.event.client_payload.deployment_id }}" >> $GITHUB_OUTPUT

      - name: Create Fly app
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          echo "Creating Fly app: ${{ steps.payload.outputs.app_name }}"
          flyctl apps create ${{ steps.payload.outputs.app_name }} --org chada || echo "App may already exist"

      - name: Attach databases and set secrets
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          APP_NAME="${{ steps.payload.outputs.app_name }}"
          
          echo "📦 Attaching PostgreSQL database..."
          flyctl postgres attach evershop-db -a $APP_NAME --yes || echo "⚠️ PostgreSQL attach failed"
          
          echo "🔐 Setting application secrets (including Redis URL)..."
          flyctl secrets set \
            NODE_ENV="production" \
            REDIS_URL="redis://shopsaas-redis.flycast:6379" \
            ADMIN_EMAIL="${{ github.event.client_payload.admin_email }}" \
            ADMIN_PASSWORD="${{ github.event.client_payload.admin_password }}" \
            SHOP_NAME="${{ github.event.client_payload.shop_name }}" \
            SHOP_PLAN="${{ github.event.client_payload.plan }}" \
            SHOP_LIMITS_JSON='${{ github.event.client_payload.limits_json }}' \
            SHOP_EXPIRES_AT="${{ github.event.client_payload.expires_at }}" \
            -a $APP_NAME --stage || echo "⚠️ Secrets set failed"
          
          echo "✅ Databases attached and secrets configured"

      - name: Deploy with flyctl
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          APP_NAME="${{ steps.payload.outputs.app_name }}"
          IMAGE="${{ github.event.client_payload.image || 'registry.fly.io/evershop-fly:deployment-01K88VT3QAADMPVZT2SBX08V0R' }}"
          
          echo "Deploying app with image: $IMAGE"
          
          # Deploy using flyctl deploy (creates proper release and applies secrets)
          flyctl deploy \
            --app $APP_NAME \
            --image $IMAGE \
            --strategy immediate \
            --ha=false \
            --vm-size shared-cpu-1x \
            --vm-memory 512 \
            --now
          
          echo "✅ Deployment complete"
          
          # Get machine ID for callback
          MACHINE_ID=$(flyctl machines list -a $APP_NAME --json | jq -r '.[0].id // empty')
          echo "machine_id=$MACHINE_ID" >> $GITHUB_OUTPUT

      - name: Notify shopsaas
        if: always()
        env:
          SHOPSAAS_WEBHOOK_SECRET: ${{ secrets.SHOPSAAS_WEBHOOK_SECRET }}
        run: |
          STATUS="${{ job.status }}"
          APP_NAME="${{ steps.payload.outputs.app_name }}"
          DEPLOYMENT_ID="${{ steps.payload.outputs.deployment_id }}"
          
          curl -X POST "${{ github.event.client_payload.callback_url }}" \
            -H "Authorization: Bearer $SHOPSAAS_WEBHOOK_SECRET" \
            -H "Content-Type: application/json" \
            -d "{\"app_name\":\"$APP_NAME\",\"deployment_id\":$DEPLOYMENT_ID,\"status\":\"$STATUS\",\"github_run_id\":\"${{ github.run_id }}\",\"machine_id\":\"${{ steps.deploy.outputs.machine_id }}\"}"

